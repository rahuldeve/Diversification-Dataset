(2,4) TREES

 Search Trees (but not binary)

 also known as 2-4, 2-3-4 trees

 very important as basis for Red-Black trees (so pay

attention!)

(2,4) Trees

1

Multi-way Search Trees

 Each internal node of a multi-way search tree T:

- has at least two children
- stores a collection of items of the form (k, x),

where k is a key and x is an element

- contains d - 1 items, where d is the number of

children

- contains 2 pseudo-items:

=

k0

=

,

kd

 Children of each internal node are between items

- all keys in the subtree rooted at the child fall

between keys of those items

 External nodes are just placeholders

(2,4) Trees

2

Multi-way Searching

 Similar to binary searching

 If search key

s

 If

s

>

kd

1

<

k1

, search the leftmost child

, search the rightmost child

 Thats it in a binary tree; what about if

d

2>

?

 Find two keys

ki 1
and search the child

 and
.
vi

ki

 between which s falls,

Searching
for s = 8

22

Searching
for s = 12

25

5

10

3

4

6

8

14

23 24

27

11 13

17 18 19 20 21

Not found!

 What would an in-order traversal look like?

(2,4) Trees

3

(2,4) Trees

 At most 4 children

 All external nodes have same depth

 Height h of (2,4) tree is

O

log(

)

.

n

 How is this fact useful in searching?

12

5 10

15

3

4

6

8

11

13 14

17

(2,4) Trees

4

(2,4) Insertion

 Always maintain depth condition

 Add elements only to existing nodes

Empty
tree

4

6 12

Insert 4

4

Insert 6

4

6

I n s e r t   1 2

Insert 15

?

 What if that makes a node too big?

- overflow

 Must perform a split operation

v

- replace node  with two nodes
-
-
- send the other key up the tree

 gets the first two keys
 gets the last key

v'
v''

v'

 and

v''

v

if

 is root, create new root with third key

-
- otherwise just add third key to parent

 Much clearer with a few pictures...

(2,4) Trees

5

(2,4) Insertion (cont.)

Insert 15

12

12

4

6

12

15

4

6

15

4

6

15

e rt  3

s

n

I

12

Insert 5

12

3

4

6

15

3

4

5

6

15

12

5

5 12

3

4

6

15

3

4

6

15

 Tree always grows from the top, maintaining

balance

 What if parent is full?

(2,4) Trees

6

(2,4) Insertion (cont.)

 Do the same thing:

Insert 17

5

10

12

3

4

6

8

11

13

14

15

17

5

10

12

15

3

4

6

8

11

13 14

17

12

5 10

15

3

4

6

8

11

13 14

17

 Overflow cascade all the way up to the root

log(

n

- still at most

O

)

(2,4) Trees

7

(2,4) Deletion

 A little trickier

 First of all, find the key

- simple multi-way search

 Then, reduce to the case where deletable item is at

the bottom of the tree
- Find item which precedes it in in-order traversal
- Swap them

 Remove the item

Delete 13

11

13

15

6

5

8 10

14

17

 Easy, right?

 ...but what about removing from 2-nodes?

(2,4) Trees

8

(2,4) Deletion (cont.)

 Not enough items in the node

- underflow

 Pull an item from the parent, replace it with an item

from a sibling
- called transfer

Delete 4

4

5 10

6

8

11

u

10

w
8

11

5

v

6

 Still not good enough! What happens if siblings are

2-nodes?

 Could we just pull one item from the parent?

- too many children

 But maybe...

(2,4) Trees

9

(2,4) Deletion (cont.)

 We know that the nodes sibling is just a 2-node

 So we fuse them into one

- after stealing an item from the parent, of course
Delete 12

6

10

12

10

v

5

5

8

u

6

8

u
6

5

8 10

 Last special case, I promise: what if the parent was a

2-node?

(2,4) Trees

10

(2,4) Deletion (cont.)

 Underflow can cascade up the tree, too.

Delete 14

5

5

5

5

11

11

14

15

17

17

u

15
v

11

u

8 10

8 10

6

6

6

8 10

15 17

6 11

8 10

15 17

(2,4) Trees

11

 The height of a (2,4) tree is

(2,4) Conclusion
)
.
O 1( )
 Search, insertion and deletion each take
O

log(
 Split, transfer, and fusion each take

.

O

n

log(

)

.

n

 Why are we doing this?

(2,4) trees are fun! Why else would we do it?

-
- Well, theres another reason, too.
- Theyre pretty fundamental to the idea of Red-Black trees as

well.

- And youre covering Red-Black trees on Monday.
- Perhaps more importantly, your next project is a Red-Black tree.

 Have a nice weekend!

(2,4) Trees

12

