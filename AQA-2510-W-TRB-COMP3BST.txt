  

 

A-level Computing 
COMP3 binary search tree 
 
 

 

COMP3: Section 3.3.2 Programming Concepts: Standard Algorithms 
Binary search tree 
 

Figure 1 Ordered binary tree 

 

 

30

20 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
The ordered binary tree in Figure 1 is also known as a binary search tree for a reason that will 
become  obvious  when  set  the  task  of  finding  if  a  particular  integer  is  present  in  the  tree.  For 
example, given the tree in Figure 1, the integer 20 can be found in two comparisons by applying 
the following algorithm: 
 

25 

17 

41

37

56

Compare 20 with the integer at the root,  
if it matches then it has been found  
otherwise if it is numerically less then examine the root of the left sub-
tree else examine the root of the right sub-tree. 
Continue  until  a  match  is  found  or  the  left  or  right  sub-tree  is  empty. 
The latter situation results when the sought value is not in the tree. 

 
How many comparisons are needed to find the integer 56? (The answer is on the next page.) 
 
 
 
 
 
 
 
 
 
 
 

AQA Education (AQA) is a registered charity (number 1073334) and a company limited by guarantee registered in 
England and Wales (number 3644723). Our registered address is AQA, Devas Street, Manchester M15 6EX.
 

A-level Computing  COMP3 binary search tree 

 

 

 

 

 
 
 
 

Three comparisons are needed to find integer 56 in the tree. This is where the binary search tree 
scores over a linear search. In the linear search, the search begins at the beginning of the list and 
proceeds from list item to list item, in turn. 
 
The linear search of an unordered list containing all the values in the binary tree - 30 20 41 25 37 
17 56 - will take seven comparisons whilst the search of the binary search tree takes only three. 
Three is also the maximum number of comparisons for the tree in Figure 1 whilst for a linear list 
with these values it is seven. 
 
Exercises: 
 
 
1. Create a binary search tree (ordered binary tree) from the list of integers: 
 

67 43 86 97 17 58 81 77 79 12 15 112 93 

 
2. Create a binary search tree (ordered binary tree) from the list of strings: 
 

meat cow pig dog cat fish seal terrapin owl 

3. Write down a program data structure that could store the binary search tree in Exercise 2 if the 
programming language for the program does not have a native data type for binary trees. You 
may assume that the language supports the record and array primitives.  

How would you change your record structure so that a program could be used to look up the 
French translation of the English word? 

AQA Education (AQA) is a registered charity (number 1073334) and a company limited by guarantee registered in 
England and Wales (number 3644723). Our registered address is AQA, Devas Street, Manchester M15 6EX.
 

2 of 2

